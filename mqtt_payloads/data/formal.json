{
	"$schema": "http://json-schema.org/draft/2019-09/schema",
	"title": "Payload: kosmos/analysis/<contractId>",
	"description": "definition of the payload for the topic kosmos/analysis/<contractId>",
	"properties": {
		"body": {
			"type": "object",
			"properties": {
				"machineID": {
					"type": "string",
					"description": "is the machineID"
				},
				"timestamp": {
					"type": "string",
					"description": "timestamp where the metric is created in RFC 3339 format"
				},
				"columns": {
					"type": "array",
					"description": "definition of the column data",
					"minItems": 1,
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "is the name of this column"
							},
							"type": {
								"type": "string",
								"description": "is the data type, which is used in this column",
								"enum": [
									"number",
									"string",
									"rfctime"
								]
							},
							"meta": {
								"properties": {
									"unit": {
										"type": "string",
										"description": "defines the data type, which is used in this column"
									},
									"description": {
										"type": "string",
										"description": "is a description to this data type"
									},
									"future": {
										"type": "object",
										"description": "reserved for future used"
									}
								},
								"required": [
									"unit"
								]
							}
						},
						"required": [
							"name",
							"type",
							"meta"
						]
					}
				},
				"data": {
					"type": "array",
					"description": "are the transmitted data",
					"minItems": 1,
					"items": {
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "string"
						}
					}
				},
				"meta": {
					"type": "array",
					"description": "are extended meta information about this transmitted data",
					"minItems": 1,
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "is the name of the metadata"
							},
							"description": {
								"type": "string",
								"description": "is the description of the metadata"
							},
							"type": {
								"type": "string",
								"description": "is the meta data type definition",
								"enum": [
									"number",
									"string",
									"rfctime"
								]
							},
							"value": {
								"type": "string",
								"description": "is the value of this meta data"
							}
						},
						"required": [
							"name",
							"type",
							"value"
						]
					}
				}
			},
			"required": [
				"timestamp",
				"columns",
				"data"
			]
		},
		"signature": {
			"type": "object",
			"description": "base64 encoded cryptographic signature about all other fields in the message",
			"required": ["signature", "meta"],
			"additionalProperties": false,
			"properties": {
				"signature": {
					"type": "string",
					"description": "contains the signature of this datum"
				},
				"meta": {
					"type": "object",
					"additionalProperties": false,
					"description": "contains meta data of to use with the signature",
					"required": ["date", "algorithm", "serialNumber"],
					"properties": {
						"date": {
							"description": "contains the date, when the message is signed",
							"type": "string",
							"format": "date-time"
						},
						"algorithm": {
							"type": "string",
							"description": "is the used cryptographic algorithm, which is used to create the signature"
						},
						"serialNumber": {
							"type": "string",
							"description": "is the serial number of the signing certificate",
							"pattern": "^([0-9A-Fa-f]{2}-)+[0-9A-Fa-f]{2}$",
							"examples": [
								"72-4E-15-2D-3F-68-A9-9C-4F-3A-80-82-A2-9D-D2-FD-56-DA-7D-B1"
							]
						}
					}
				}
			}
		}
	},
	"required": [
		"body"
	]
}
